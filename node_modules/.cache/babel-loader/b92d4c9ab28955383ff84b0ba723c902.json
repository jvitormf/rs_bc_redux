{"ast":null,"code":"import produce from 'immer';\nexport default function cart(state = [], action) {\n  switch (action.type) {\n    case '@cart/ADD_SUCCESS':\n      return produce(state, draft => {\n        const product = action.product;\n        draft.push(product);\n      });\n\n    case '@cart/REMOVE':\n      return produce(state, draft => {\n        const productIndex = draft.findIndex(p => p.id === action.id);\n\n        if (productIndex >= 0) {\n          draft.splice(productIndex, 1);\n        }\n      });\n\n    case '@cart/UPDATE_AMOUNT_SUCCESS':\n      {\n        return produce(state, draft => {\n          const productIndex = draft.findIndex(p => p.id === action.id);\n\n          if (productIndex >= 0) {\n            draft[productIndex].amount = Number(action.amount);\n          }\n        });\n      }\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["C:\\Temp\\Rocketseat\\Bootcamp\\Flux\\redux\\src\\store\\modules\\cart\\reducer.js"],"names":["produce","cart","state","action","type","draft","product","push","productIndex","findIndex","p","id","splice","amount","Number"],"mappings":"AAAA,OAAOA,OAAP,MAAoB,OAApB;AAEA,eAAe,SAASC,IAAT,CAAcC,KAAK,GAAG,EAAtB,EAA0BC,MAA1B,EAAkC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACI,SAAK,mBAAL;AACI,aAAOJ,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAAA,cACnBC,OADmB,GACPH,MADO,CACnBG,OADmB;AAE3BD,QAAAA,KAAK,CAACE,IAAN,CAAWD,OAAX;AACH,OAHa,CAAd;;AAIJ,SAAK,cAAL;AACI,aAAON,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC3B,cAAMG,YAAY,GAAGH,KAAK,CAACI,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASR,MAAM,CAACQ,EAArC,CAArB;;AAEA,YAAIH,YAAY,IAAI,CAApB,EAAuB;AACnBH,UAAAA,KAAK,CAACO,MAAN,CAAaJ,YAAb,EAA2B,CAA3B;AACH;AACJ,OANa,CAAd;;AAQJ,SAAK,6BAAL;AAAoC;AAChC,eAAOR,OAAO,CAACE,KAAD,EAAQG,KAAK,IAAI;AAC3B,gBAAMG,YAAY,GAAGH,KAAK,CAACI,SAAN,CAAgBC,CAAC,IAAIA,CAAC,CAACC,EAAF,KAASR,MAAM,CAACQ,EAArC,CAArB;;AAEA,cAAIH,YAAY,IAAI,CAApB,EAAuB;AACnBH,YAAAA,KAAK,CAACG,YAAD,CAAL,CAAoBK,MAApB,GAA6BC,MAAM,CAACX,MAAM,CAACU,MAAR,CAAnC;AACH;AACJ,SANa,CAAd;AAOH;;AACD;AACI,aAAOX,KAAP;AAzBR;AA2BH","sourcesContent":["import produce from 'immer';\n\nexport default function cart(state = [], action) {\n    switch (action.type) {\n        case '@cart/ADD_SUCCESS':\n            return produce(state, draft => {\n                const { product } = action;\n                draft.push(product);\n            });\n        case '@cart/REMOVE':\n            return produce(state, draft => {\n                const productIndex = draft.findIndex(p => p.id === action.id);\n\n                if (productIndex >= 0) {\n                    draft.splice(productIndex, 1);\n                }\n            });\n\n        case '@cart/UPDATE_AMOUNT_SUCCESS': {\n            return produce(state, draft => {\n                const productIndex = draft.findIndex(p => p.id === action.id);\n\n                if (productIndex >= 0) {\n                    draft[productIndex].amount = Number(action.amount);\n                }\n            });\n        }\n        default:\n            return state;\n    }\n}\n"]},"metadata":{},"sourceType":"module"}