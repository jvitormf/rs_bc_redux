{"ast":null,"code":"import _defineProperty from \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\Flux\\\\redux\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"C:\\\\Temp\\\\Rocketseat\\\\Bootcamp\\\\Flux\\\\redux\\\\src\\\\pages\\\\Cart\\\\index.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { MdRemoveCircleOutline, MdAddCircleOutline, MdDelete } from 'react-icons/md';\nimport { formatPrice } from '../../util/format';\nimport * as CartActions from '../../store/modules/cart/actions';\nimport { Container, ProductTable, Total } from './styles';\nexport default function Cart() {\n  const total = useSelector(state => formatPrice(state.cart.reduce((total, product) => {\n    return total + product.price * product.amount;\n  }, 0)));\n  const cart = useSelector(state => state.cart.map(product => _objectSpread({}, product, {\n    subtotal: formatPrice(product.price * product.amount)\n  })));\n  const dispatch = useDispatch();\n\n  function increment(product) {\n    dispatch(updateAmountRequest(product.id, product.amount + 1));\n  }\n\n  function decrement(product) {\n    dispatch(updateAmountRequest(product.id, product.amount - 1));\n  }\n\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, React.createElement(ProductTable, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, \"PRODUTO\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"QTD\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"SUBTOTAL\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, cart.map(product => React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }, React.createElement(\"img\", {\n    src: product.image,\n    alt: product.title,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  })), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, product.title), React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, product.priceFormatted)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => decrement(product),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  }, React.createElement(MdRemoveCircleOutline, {\n    size: 20,\n    color: \"#7159c1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68\n    },\n    __self: this\n  })), React.createElement(\"input\", {\n    type: \"number\",\n    readOnly: true,\n    value: product.amount,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }), React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => increment(product),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }, React.createElement(MdAddCircleOutline, {\n    size: 20,\n    color: \"#7159c1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  })))), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, product.subtotal)), React.createElement(\"td\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => removeFromCart(product.id),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(MdDelete, {\n    size: 20,\n    color: \"#7159c1\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }))))))), React.createElement(\"footer\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }, React.createElement(\"button\", {\n    type: \"button\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105\n    },\n    __self: this\n  }, \" Finalizar Pedido\"), React.createElement(Total, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106\n    },\n    __self: this\n  }, React.createElement(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, \"TOTAL\"), React.createElement(\"strong\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }, total))));\n}","map":{"version":3,"sources":["C:\\Temp\\Rocketseat\\Bootcamp\\Flux\\redux\\src\\pages\\Cart\\index.js"],"names":["React","useDispatch","useSelector","MdRemoveCircleOutline","MdAddCircleOutline","MdDelete","formatPrice","CartActions","Container","ProductTable","Total","Cart","total","state","cart","reduce","product","price","amount","map","subtotal","dispatch","increment","updateAmountRequest","id","decrement","image","title","priceFormatted","removeFromCart"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SACIC,qBADJ,EAEIC,kBAFJ,EAGIC,QAHJ,QAIO,gBAJP;AAMA,SAASC,WAAT,QAA4B,mBAA5B;AAEA,OAAO,KAAKC,WAAZ,MAA6B,kCAA7B;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,KAAlC,QAA+C,UAA/C;AAEA,eAAe,SAASC,IAAT,GAAgB;AAC3B,QAAMC,KAAK,GAAGV,WAAW,CAACW,KAAK,IAC3BP,WAAW,CACPO,KAAK,CAACC,IAAN,CAAWC,MAAX,CAAkB,CAACH,KAAD,EAAQI,OAAR,KAAoB;AAClC,WAAOJ,KAAK,GAAGI,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACE,MAAvC;AACH,GAFD,EAEG,CAFH,CADO,CADU,CAAzB;AAQA,QAAMJ,IAAI,GAAGZ,WAAW,CAACW,KAAK,IAC1BA,KAAK,CAACC,IAAN,CAAWK,GAAX,CAAeH,OAAO,sBACfA,OADe;AAElBI,IAAAA,QAAQ,EAAEd,WAAW,CAACU,OAAO,CAACC,KAAR,GAAgBD,OAAO,CAACE,MAAzB;AAFH,IAAtB,CADoB,CAAxB;AAOA,QAAMG,QAAQ,GAAGpB,WAAW,EAA5B;;AAEA,WAASqB,SAAT,CAAmBN,OAAnB,EAA4B;AACxBK,IAAAA,QAAQ,CAACE,mBAAmB,CAACP,OAAO,CAACQ,EAAT,EAAaR,OAAO,CAACE,MAAR,GAAiB,CAA9B,CAApB,CAAR;AACH;;AACD,WAASO,SAAT,CAAmBT,OAAnB,EAA4B;AACxBK,IAAAA,QAAQ,CAACE,mBAAmB,CAACP,OAAO,CAACQ,EAAT,EAAaR,OAAO,CAACE,MAAR,GAAiB,CAA9B,CAApB,CAAR;AACH;;AAED,SACI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAHJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ,EAKI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALJ,CADJ,CADJ,EAUI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKJ,IAAI,CAACK,GAAL,CAASH,OAAO,IACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAK,IAAA,GAAG,EAAEA,OAAO,CAACU,KAAlB;AAAyB,IAAA,GAAG,EAAEV,OAAO,CAACW,KAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,EAII;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASX,OAAO,CAACW,KAAjB,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOX,OAAO,CAACY,cAAf,CAFJ,CAJJ,EAQI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAE,MAAMH,SAAS,CAACT,OAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,qBAAD;AACI,IAAA,IAAI,EAAE,EADV;AAEI,IAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,EAUI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,QAAQ,MAFZ;AAGI,IAAA,KAAK,EAAEA,OAAO,CAACE,MAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVJ,EAeI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAE,MAAMI,SAAS,CAACN,OAAD,CAF5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,kBAAD;AACI,IAAA,IAAI,EAAE,EADV;AAEI,IAAA,KAAK,EAAC,SAFV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CAfJ,CADJ,CARJ,EAmCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASA,OAAO,CAACI,QAAjB,CADJ,CAnCJ,EAsCI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AACI,IAAA,IAAI,EAAC,QADT;AAEI,IAAA,OAAO,EAAE,MAAMS,cAAc,CAACb,OAAO,CAACQ,EAAT,CAFjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAII,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAE,EAAhB;AAAoB,IAAA,KAAK,EAAC,SAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,CADJ,CAtCJ,CADH,CADL,CAVJ,CADJ,EA+DI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAASZ,KAAT,CAFJ,CAFJ,CA/DJ,CADJ;AAyEH","sourcesContent":["import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    MdRemoveCircleOutline,\n    MdAddCircleOutline,\n    MdDelete,\n} from 'react-icons/md';\n\nimport { formatPrice } from '../../util/format';\n\nimport * as CartActions from '../../store/modules/cart/actions';\n\nimport { Container, ProductTable, Total } from './styles';\n\nexport default function Cart() {\n    const total = useSelector(state =>\n        formatPrice(\n            state.cart.reduce((total, product) => {\n                return total + product.price * product.amount;\n            }, 0)\n        )\n    );\n\n    const cart = useSelector(state =>\n        state.cart.map(product => ({\n            ...product,\n            subtotal: formatPrice(product.price * product.amount),\n        }))\n    );\n\n    const dispatch = useDispatch();\n\n    function increment(product) {\n        dispatch(updateAmountRequest(product.id, product.amount + 1));\n    }\n    function decrement(product) {\n        dispatch(updateAmountRequest(product.id, product.amount - 1));\n    }\n\n    return (\n        <Container>\n            <ProductTable>\n                <thead>\n                    <tr>\n                        <th />\n                        <th>PRODUTO</th>\n                        <th>QTD</th>\n                        <th>SUBTOTAL</th>\n                        <th />\n                    </tr>\n                </thead>\n                <tbody>\n                    {cart.map(product => (\n                        <tr>\n                            <td>\n                                <img src={product.image} alt={product.title} />\n                            </td>\n                            <td>\n                                <strong>{product.title}</strong>\n                                <span>{product.priceFormatted}</span>\n                            </td>\n                            <td>\n                                <div>\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => decrement(product)}\n                                    >\n                                        <MdRemoveCircleOutline\n                                            size={20}\n                                            color=\"#7159c1\"\n                                        />\n                                    </button>\n                                    <input\n                                        type=\"number\"\n                                        readOnly\n                                        value={product.amount}\n                                    />\n                                    <button\n                                        type=\"button\"\n                                        onClick={() => increment(product)}\n                                    >\n                                        <MdAddCircleOutline\n                                            size={20}\n                                            color=\"#7159c1\"\n                                        />\n                                    </button>\n                                </div>\n                            </td>\n                            <td>\n                                <strong>{product.subtotal}</strong>\n                            </td>\n                            <td>\n                                <button\n                                    type=\"button\"\n                                    onClick={() => removeFromCart(product.id)}\n                                >\n                                    <MdDelete size={20} color=\"#7159c1\" />\n                                </button>\n                            </td>\n                        </tr>\n                    ))}\n                </tbody>\n            </ProductTable>\n            <footer>\n                <button type=\"button\"> Finalizar Pedido</button>\n                <Total>\n                    <span>TOTAL</span>\n                    <strong>{total}</strong>\n                </Total>\n            </footer>\n        </Container>\n    );\n}\n"]},"metadata":{},"sourceType":"module"}